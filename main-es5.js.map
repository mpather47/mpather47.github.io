{"version":3,"sources":["webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/model/user.model.ts","webpack:///src/app/app.module.ts","webpack:///src/app/protected.component.ts","webpack:///src/app/services/register.service.ts","webpack:///src/app/login.component.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["RegisterComponent","service","user","createUser","subscribe","data","console","log","error","register","environment","production","AppComponent","oktaAuth","router","title","name_test","$authenticationState","isAuthenticated","signInWithRedirect","originalUri","signOut","navigateByUrl","User","config","issuer","redirectUri","window","location","origin","clientId","pkce","onAuthRequired","injector","get","navigate","appRoutes","path","component","canActivate","AppModule","provide","useValue","forRoot","ProtectedComponent","message","RegisterService","http","url","headers","Authorization","post","profile","firstName","lastName","email","credentials","password","LoginComponent","widget","el","baseUrl","authParams","features","idpDiscovery","authService","events","forEach","event","remove","showSignInAndRedirect","err","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { User } from './../model/user.model';\nimport { RegisterService } from './../services/register.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(public service: RegisterService) {\n\n  }\n  user: User = new User();\n\n  register() {\n\n    this.service.createUser(this.user).subscribe(data => console.log(data), error => console.log(error));\n\n  }\n  ngOnInit(): void {\n\n  }\n\n}\n","<style>\n  /* Add a background color when the inputs get focus */\n  input[type=text]:focus,\n  input[type=password]:focus {\n    background-color: #ddd;\n    outline: none;\n  }\n\n  /* Set a style for all buttons */\n\n\n  button:hover {\n    opacity: 1;\n  }\n\n  /* Extra styles for the cancel button */\n  .cancelbtn {\n    padding: 14px 20px;\n    background-color: #f44336;\n  }\n\n  .signupbtn {\n    padding: 14px 20px;\n    background-color: #1eff00;\n  }\n\n  .extsignup {\n    background-color: Yellow;\n  }\n\n  /* Float cancel and signup buttons and add an equal width */\n  .cancelbtn,\n  .signupbtn {\n    float: left;\n    width: 40%;\n    justify-content: center;\n  }\n\n  /* Add padding to container elements */\n  .container {\n    padding: 16px;\n  }\n\n  /* The Modal (background) */\n  .modal {\n    display: none;\n    /* Hidden by default */\n    position: fixed;\n    /* Stay in place */\n    z-index: 1;\n    /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%;\n    /* Full width */\n    height: 100%;\n    /* Full height */\n    overflow: auto;\n    /* Enable scroll if needed */\n    background-color: #474e5d;\n    padding-top: 50px;\n  }\n\n  /* Modal Content/Box */\n  .modal-content {\n    background-color: #fefefe;\n    margin: 5% auto 15% auto;\n    /* 5% from the top, 15% from the bottom and centered */\n    border: 1px solid #888;\n    width: 80%;\n    /* Could be more or less, depending on screen size */\n  }\n\n  /* Style the horizontal ruler */\n\n\n  /* The Close Button (x) */\n  .close {\n    position: absolute;\n    right: 35px;\n    top: 15px;\n    font-size: 40px;\n    font-weight: bold;\n    color: #f1f1f1;\n  }\n\n  .close:hover,\n  .close:focus {\n    color: #f44336;\n    cursor: pointer;\n  }\n\n  /* Clear floats */\n  .clearfix::after {\n    content: \"\";\n    clear: both;\n    display: table;\n  }\n\n  /* Full-width input fields */\n  input[type=text],\n  input[type=password],input[type=email] {\n    width: 90%;\n    padding: 15px;\n    margin: 5px 0 22px 0;\n    display: inline-block;\n    border: none;\n    background: #f1f1f1;\n  }\n\n  /* Change styles for cancel button and signup button on extra small screens */\n  @media screen and (max-width: 300px) {\n\n    .cancelbtn,\n    .signupbtn {\n      width: 100%;\n    }\n  }\n</style>\n<div id=\"id01\" class=\"modal\">\n  <span onclick=\"document.getElementById('id01').style.display='none'\" class=\"close\" title=\"Close Modal\">&times;</span>\n  <form (ngSubmit)=\"register()\" #userForm=\"ngForm\" class=\"modal-content\" action=\"/action_page.php\">\n    <div class=\"container\">\n      <h1>Sign Up</h1>\n      <p>Please fill in this form to create an account.</p>\n      <label for=\"text\"><b>Firstname</b></label>\n      <br>\n      <input type=\"text\" id=\"firstName\" #firstname=\"ngModel\" [(ngModel)]=\"user.firstName\" name=\"firstName\"\n        class=\"form-control\" required>\n      <br>\n      <label for=\"text\"><b>Lastname</b></label>\n      <br>\n      <input type=\"text\" id=\"lastName\" #lastName=\"ngModel\" [(ngModel)]=\"user.lastName\" name=\"lastName\"\n        class=\"form-control\" required>\n      <br>\n      <label for=\"email\"><b>Email</b></label>\n      <br>\n      <input type=\"email\" id=\"email\" #email=\"ngModel\" [(ngModel)]=\"user.email\" name=\"email\" class=\"form-control\"\n        required>\n      <br>\n      <label for=\"psw\"><b>Password</b></label>\n      <br>\n      <input type=\"password\" name=\"psw\" required>\n      <br>\n      <label for=\"psw-repeat\"><b>Repeat Password</b></label>\n      <br>\n      <input type=\"password\" id=\"password\" #password=\"ngModel\" [(ngModel)]=\"user.password\" name=\"password\"\n        class=\"form-control\" required>\n      <br>\n      \n      <p>By creating an account you agree to our <a href=\"#\" style=\"color:dodgerblue\">Terms & Privacy</a>.</p>\n\n\n      <button type=\"button\" class=\"cancelbtn\">Cancel</button>\n      <button type=\"submit\" class=\"signupbtn\">Sign Up</button>\n\n    </div>\n  </form>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n<style>\n  :host {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n    font-size: 14px;\n    color: #333;\n    box-sizing: border-box;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n \n\n  .toolbar {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 60px;\n    display: flex;\n    \n    align-items: center;\n    background-color: #1976d2;\n    color: white;\n    font-weight: 600;\n  }\n\n \n\nbutton{\n  background-color: white; /* Green */\n  border: none;\n  color: black;\n  padding: 5px 20px;\n  margin-left: 10px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n}\n\n  .content {\n    display: flex;\n    padding-top: 100px;\n    align-items: center;\n  }\n\n  .jumbotron {\n  min-width: 585px;\n  margin: 10px auto;\n  display: block;\n  justify-content: center;\n  margin: 10px 10px 10px 10px;\n  border: 0.08em solid black;\n}\n\n\n\nbody {font-family: Arial, Helvetica, sans-serif;}\n* {box-sizing: border-box;}\n\n/* Full-width input fields */\ninput[type=text], input[type=password] {\n  width: 90%;\n  padding: 15px;\n  margin: 5px 0 22px 0;\n  display: inline-block;\n  border: none;\n  background: #f1f1f1;\n}\n\n\n</style>\n<!-- Toolbar -->\n<div class=\"toolbar\" role=\"banner\">\n  <link href=\"https://global.oktacdn.com/okta-signin-widget/5.3.3/css/okta-sign-in.min.css\" type=\"text/css\" rel=\"stylesheet\"/>\n\n\n <div class=\"x\">\n\n  \n  <button routerLink=\"/\"> Home </button>\n  <button *ngIf=\"!isAuthenticated\" routerLink=\"/login\"> Login </button>\n  <button *ngIf=\"isAuthenticated\" (click)=\"logout()\"> Logout </button>\n  <button routerLink=\"/protected\"> Protected </button>\n </div> \n\n \n</div>\n\n<div class=\"content\" role=\"main\">\n  <div class=\"container\">\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\n\n    <h1 class=\"text-center\">Okta Login Demo</h1>\n    <br>\n    <div *ngIf=\"!isAuthenticated\"  id=\"messageBox\" class=\"jumbotron\">\n      <p>You are not logged in. Please sign up or login? 😁</p>\n      <br>\n      <button class=\"extsignup\" onclick=\"document.getElementById('id01').style.display='block'\" style=\"width:auto;\">Sign Up</button>\n      <br>\n      \n    </div>\n    <div *ngIf=\"isAuthenticated\" id=\"messageBox\" class=\"jumbotron\">\n      <p>You are now logged in! 😇</p>\n      \n\n    </div>\n    <br>\n    <a href=\"https://dev-96827083.okta.com/oauth2/v1/authorize?idp=0oa9xz747txkQcl6I5d6&client_id=0oa86pz8gD2KvS0qw5d6&response_type=id_token&response_mode=fragment&scope=openid%20email&redirect_uri=http://localhost:4200/login/callback&state=WM6D&nonce=YsG76jo\">Sign in with Identity Provider</a>\n    \n\n    <!-- where the sign-in form will be displayed -->\n  </div>\n\n<register></register>\n\n\n\n\n</div>\n\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content above * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * End of Placeholder * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n\n<router-outlet></router-outlet>\n\n<script>\n  // Get the modal\n  var modal = document.getElementById('id01');\n  \n  // When the user clicks anywhere outside of the modal, close it\n  window.onclick = function(event) {\n    if (event.target == modal) {\n      modal.style.display = \"none\";\n    }\n  }\n  </script>\n  \n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { OktaAuthService } from '@okta/okta-angular';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  title = 'okta-app';\n  isAuthenticated: boolean;\n  name_test: String = \"\";\n  constructor(public oktaAuth: OktaAuthService, public router: Router) {\n    // Subscribe to authentication state changes\n    this.oktaAuth.$authenticationState.subscribe(\n      (isAuthenticated: boolean)  => this.isAuthenticated = isAuthenticated\n    );\n  }\n\n  async ngOnInit() {\n    // Get the authentication state for immediate use\n    this.isAuthenticated = await this.oktaAuth.isAuthenticated();\n  }\n\n  login() {\n    this.oktaAuth.signInWithRedirect({\n      originalUri: '/profile'\n    });\n  }\n\n  async logout() {\n    // Terminates the session with Okta and removes current tokens.\n    await this.oktaAuth.signOut();\n    this.router.navigateByUrl('/');\n  }\n}\n\n\n\n","export class User {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  password:string;\r\n} ","import { RegisterService } from './services/register.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule, Router } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'; \nimport { HttpClientModule} from '@angular/common/http';\nimport {\n  OKTA_CONFIG,\n  OktaAuthModule,\n  OktaCallbackComponent,\n  OktaAuthGuard\n} from '@okta/okta-angular';\n\nimport { AppComponent } from './app.component';\nimport { ProtectedComponent } from './protected.component';\nimport { LoginComponent } from './login.component';\nimport { RegisterComponent } from './register/register.component';\n\n\n\nconst config = {\n  issuer: 'https://dev-96827083.okta.com/oauth2/default',\n  redirectUri: window.location.origin + '/login/callback',\n  clientId: '0oa86pz8gD2KvS0qw5d6',\n  pkce: true\n}\n\nexport function onAuthRequired(oktaAuth, injector) {\n  const router = injector.get(Router);\n\n  // Redirect the user to your custom login page\n  router.navigate(['/login']);\n}\n\nconst appRoutes: Routes = [\n  \n  {\n    path: 'login/callback',\n    component: OktaCallbackComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'protected',\n    component: ProtectedComponent,\n    canActivate: [ OktaAuthGuard ],\n    data: {\n      onAuthRequired\n    },\n  }\n  \n]\n@NgModule({\n  \n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    OktaAuthModule,\n    FormsModule,                               \n    ReactiveFormsModule,\n    HttpClientModule     \n  ],\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ProtectedComponent,\n    RegisterComponent\n    \n  ],\n  providers: [\n    { provide: OKTA_CONFIG, useValue: config },RegisterService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-secure',\r\n  template: `{{message}}`\r\n})\r\nexport class ProtectedComponent {\r\n  message;\r\n\r\n  constructor() {\r\n    this.message = 'Protected endpoint!';\r\n  }\r\n}","import { Observable } from 'rxjs';\nimport { User } from './../model/user.model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n  constructor(private http: HttpClient){\n  }\n  url ='https://dev-96827083.okta.com/api/v1/users?acti3vate=true';\n\n  \n  createUser(user: User) : Observable<User>{\n    const headers = new HttpHeaders({\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      Authorization : 'SSWS00pcxhTFA1UllEd5-RsrjAXpWzXS6h1VEN4eOF0ikU'\n    })\n   \n     return this.http.post<User>(this.url,{ \n      profile: {\n      \"firstName\": user.firstName,\n      \"lastName\": user.lastName,\n      \"email\": user.email,\n      \"login\": user.email\n     \n      },\n      credentials: {\n        \"password\" : { \"value\": user.password }\n      }\n    },{headers: headers});\n   \n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, NavigationStart} from '@angular/router';\r\n\r\nimport { OktaAuthService } from '@okta/okta-angular';\r\nimport * as OktaSignIn from '@okta/okta-signin-widget';\r\n\r\n@Component({\r\n  selector: 'app-secure',\r\n  template: `\r\n    <!-- Container to inject the Sign-In Widget -->\r\n    <div id=\"okta-signin-container\"></div>\r\n  `\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  authService;\r\n  widget = new OktaSignIn({\r\n    el: '#okta-signin-container',\r\n    baseUrl: 'https://dev-96827083.okta.com',\r\n    authParams: {\r\n      pkce: true\r\n    },\r\n         clientId: '0oa86pz8gD2KvS0qw5d6',\r\n         redirectUri: 'http://localhost:4200/login/callback',\r\n    \r\n         features: {\r\n          idpDiscovery: true\r\n        }    \r\n  }\r\n  \r\n  \r\n  );\r\n\r\n  constructor(oktaAuth: OktaAuthService, router: Router) {\r\n    this.authService = oktaAuth;\r\n\r\n    // Show the widget when prompted, otherwise remove it from the DOM.\r\n    router.events.forEach(event => {\r\n      if (event instanceof NavigationStart) {\r\n        switch(event.url) {\r\n          case '/login':\r\n            break;\r\n          case '/protected':\r\n            break;\r\n          case '/register':\r\n              break;\r\n            \r\n          default:\r\n            this.widget.remove();\r\n            break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.widget.showSignInAndRedirect().catch(err => {\r\n      throw(err);\r\n    });\r\n  }\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}