{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/model/user.model.ts","./src/app/app.module.ts","./src/app/protected.component.ts","./src/app/services/register.service.ts","./src/app/login.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { User } from './../model/user.model';\nimport { RegisterService } from './../services/register.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(public service: RegisterService) {\n\n  }\n  user: User = new User();\n\n  register() {\n\n    this.service.createUser(this.user).subscribe(data => console.log(data), error => console.log(error));\n\n  }\n  ngOnInit(): void {\n\n  }\n\n}\n","<style>\n  /* Add a background color when the inputs get focus */\n  input[type=text]:focus,\n  input[type=password]:focus {\n    background-color: #ddd;\n    outline: none;\n  }\n\n  /* Set a style for all buttons */\n\n\n  button:hover {\n    opacity: 1;\n  }\n\n  /* Extra styles for the cancel button */\n  .cancelbtn {\n    padding: 14px 20px;\n    background-color: #f44336;\n  }\n\n  .signupbtn {\n    padding: 14px 20px;\n    background-color: #1eff00;\n  }\n\n  .extsignup {\n    background-color: Yellow;\n  }\n\n  /* Float cancel and signup buttons and add an equal width */\n  .cancelbtn,\n  .signupbtn {\n    float: left;\n    width: 40%;\n    justify-content: center;\n  }\n\n  /* Add padding to container elements */\n  .container {\n    padding: 16px;\n  }\n\n  /* The Modal (background) */\n  .modal {\n    display: none;\n    /* Hidden by default */\n    position: fixed;\n    /* Stay in place */\n    z-index: 1;\n    /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%;\n    /* Full width */\n    height: 100%;\n    /* Full height */\n    overflow: auto;\n    /* Enable scroll if needed */\n    background-color: #474e5d;\n    padding-top: 50px;\n  }\n\n  /* Modal Content/Box */\n  .modal-content {\n    background-color: #fefefe;\n    margin: 5% auto 15% auto;\n    /* 5% from the top, 15% from the bottom and centered */\n    border: 1px solid #888;\n    width: 80%;\n    /* Could be more or less, depending on screen size */\n  }\n\n  /* Style the horizontal ruler */\n\n\n  /* The Close Button (x) */\n  .close {\n    position: absolute;\n    right: 35px;\n    top: 15px;\n    font-size: 40px;\n    font-weight: bold;\n    color: #f1f1f1;\n  }\n\n  .close:hover,\n  .close:focus {\n    color: #f44336;\n    cursor: pointer;\n  }\n\n  /* Clear floats */\n  .clearfix::after {\n    content: \"\";\n    clear: both;\n    display: table;\n  }\n\n  /* Full-width input fields */\n  input[type=text],\n  input[type=password],input[type=email] {\n    width: 90%;\n    padding: 15px;\n    margin: 5px 0 22px 0;\n    display: inline-block;\n    border: none;\n    background: #f1f1f1;\n  }\n\n  /* Change styles for cancel button and signup button on extra small screens */\n  @media screen and (max-width: 300px) {\n\n    .cancelbtn,\n    .signupbtn {\n      width: 100%;\n    }\n  }\n</style>\n<div id=\"id01\" class=\"modal\">\n  <span onclick=\"document.getElementById('id01').style.display='none'\" class=\"close\" title=\"Close Modal\">&times;</span>\n  <form (ngSubmit)=\"register()\" #userForm=\"ngForm\" class=\"modal-content\" action=\"/action_page.php\">\n    <div class=\"container\">\n      <h1>Sign Up</h1>\n      <p>Please fill in this form to create an account.</p>\n      <label for=\"text\"><b>Firstname</b></label>\n      <br>\n      <input type=\"text\" id=\"firstName\" #firstname=\"ngModel\" [(ngModel)]=\"user.firstName\" name=\"firstName\"\n        class=\"form-control\" required>\n      <br>\n      <label for=\"text\"><b>Lastname</b></label>\n      <br>\n      <input type=\"text\" id=\"lastName\" #lastName=\"ngModel\" [(ngModel)]=\"user.lastName\" name=\"lastName\"\n        class=\"form-control\" required>\n      <br>\n      <label for=\"email\"><b>Email</b></label>\n      <br>\n      <input type=\"email\" id=\"email\" #email=\"ngModel\" [(ngModel)]=\"user.email\" name=\"email\" class=\"form-control\"\n        required>\n      <br>\n      <label for=\"psw\"><b>Password</b></label>\n      <br>\n      <input type=\"password\" name=\"psw\" required>\n      <br>\n      <label for=\"psw-repeat\"><b>Repeat Password</b></label>\n      <br>\n      <input type=\"password\" id=\"password\" #password=\"ngModel\" [(ngModel)]=\"user.password\" name=\"password\"\n        class=\"form-control\" required>\n      <br>\n      \n      <p>By creating an account you agree to our <a href=\"#\" style=\"color:dodgerblue\">Terms & Privacy</a>.</p>\n\n\n      <button type=\"button\" class=\"cancelbtn\">Cancel</button>\n      <button type=\"submit\" class=\"signupbtn\">Sign Up</button>\n\n    </div>\n  </form>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n<style>\n  :host {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n    font-size: 14px;\n    color: #333;\n    box-sizing: border-box;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n \n\n  .toolbar {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 60px;\n    display: flex;\n    \n    align-items: center;\n    background-color: #1976d2;\n    color: white;\n    font-weight: 600;\n  }\n\n \n\nbutton{\n  background-color: white; /* Green */\n  border: none;\n  color: black;\n  padding: 5px 20px;\n  margin-left: 10px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n}\n\n  .content {\n    display: flex;\n    padding-top: 100px;\n    align-items: center;\n  }\n\n  .jumbotron {\n  min-width: 585px;\n  margin: 10px auto;\n  display: block;\n  justify-content: center;\n  margin: 10px 10px 10px 10px;\n  border: 0.08em solid black;\n}\n\n\n\nbody {font-family: Arial, Helvetica, sans-serif;}\n* {box-sizing: border-box;}\n\n/* Full-width input fields */\ninput[type=text], input[type=password] {\n  width: 90%;\n  padding: 15px;\n  margin: 5px 0 22px 0;\n  display: inline-block;\n  border: none;\n  background: #f1f1f1;\n}\n\n\n</style>\n<!-- Toolbar -->\n<div class=\"toolbar\" role=\"banner\">\n  <link href=\"https://global.oktacdn.com/okta-signin-widget/5.3.3/css/okta-sign-in.min.css\" type=\"text/css\" rel=\"stylesheet\"/>\n\n\n <div class=\"x\">\n\n  \n  <button routerLink=\"/\"> Home </button>\n  <button *ngIf=\"!isAuthenticated\" routerLink=\"/login\"> Login </button>\n  <button *ngIf=\"isAuthenticated\" (click)=\"logout()\"> Logout </button>\n  <button routerLink=\"/protected\"> Protected </button>\n </div> \n\n \n</div>\n\n<div class=\"content\" role=\"main\">\n  <div class=\"container\">\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\n\n    <h1 class=\"text-center\">Okta Login Demo</h1>\n    <br>\n    <div *ngIf=\"!isAuthenticated\"  id=\"messageBox\" class=\"jumbotron\">\n      <p>You are not logged in. Please sign up or login? 😁</p>\n      <br>\n      <button class=\"extsignup\" onclick=\"document.getElementById('id01').style.display='block'\" style=\"width:auto;\">Sign Up</button>\n      <br>\n      \n    </div>\n    <div *ngIf=\"isAuthenticated\" id=\"messageBox\" class=\"jumbotron\">\n      <p>You are now logged in! 😇</p>\n      \n\n    </div>\n    <br>\n    <a href=\"https://dev-96827083.okta.com/oauth2/v1/authorize?idp=0oa9xz747txkQcl6I5d6&client_id=0oa86pz8gD2KvS0qw5d6&response_type=id_token&response_mode=fragment&scope=openid%20email&redirect_uri=http://localhost:4200/login/callback&state=WM6D&nonce=YsG76jo\">Sign in with Identity Provider</a>\n    \n\n    <!-- where the sign-in form will be displayed -->\n  </div>\n\n<register></register>\n\n\n\n\n</div>\n\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content above * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * End of Placeholder * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n\n<router-outlet></router-outlet>\n\n<script>\n  // Get the modal\n  var modal = document.getElementById('id01');\n  \n  // When the user clicks anywhere outside of the modal, close it\n  window.onclick = function(event) {\n    if (event.target == modal) {\n      modal.style.display = \"none\";\n    }\n  }\n  </script>\n  \n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { OktaAuthService } from '@okta/okta-angular';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  title = 'okta-app';\n  isAuthenticated: boolean;\n  name_test: String = \"\";\n  constructor(public oktaAuth: OktaAuthService, public router: Router) {\n    // Subscribe to authentication state changes\n    this.oktaAuth.$authenticationState.subscribe(\n      (isAuthenticated: boolean)  => this.isAuthenticated = isAuthenticated\n    );\n  }\n\n  async ngOnInit() {\n    // Get the authentication state for immediate use\n    this.isAuthenticated = await this.oktaAuth.isAuthenticated();\n  }\n\n  login() {\n    this.oktaAuth.signInWithRedirect({\n      originalUri: '/profile'\n    });\n  }\n\n  async logout() {\n    // Terminates the session with Okta and removes current tokens.\n    await this.oktaAuth.signOut();\n    this.router.navigateByUrl('/');\n  }\n}\n\n\n\n","export class User {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  password:string;\r\n} ","import { RegisterService } from './services/register.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule, Router } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'; \nimport { HttpClientModule} from '@angular/common/http';\nimport {\n  OKTA_CONFIG,\n  OktaAuthModule,\n  OktaCallbackComponent,\n  OktaAuthGuard\n} from '@okta/okta-angular';\n\nimport { AppComponent } from './app.component';\nimport { ProtectedComponent } from './protected.component';\nimport { LoginComponent } from './login.component';\nimport { RegisterComponent } from './register/register.component';\n\n\n\nconst config = {\n  issuer: 'https://dev-96827083.okta.com/oauth2/default',\n  redirectUri: window.location.origin + '/login/callback',\n  clientId: '0oa86pz8gD2KvS0qw5d6',\n  pkce: true\n}\n\nexport function onAuthRequired(oktaAuth, injector) {\n  const router = injector.get(Router);\n\n  // Redirect the user to your custom login page\n  router.navigate(['/login']);\n}\n\nconst appRoutes: Routes = [\n  \n  {\n    path: 'login/callback',\n    component: OktaCallbackComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'protected',\n    component: ProtectedComponent,\n    canActivate: [ OktaAuthGuard ],\n    data: {\n      onAuthRequired\n    },\n  }\n  \n]\n@NgModule({\n  \n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    OktaAuthModule,\n    FormsModule,                               \n    ReactiveFormsModule,\n    HttpClientModule     \n  ],\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ProtectedComponent,\n    RegisterComponent\n    \n  ],\n  providers: [\n    { provide: OKTA_CONFIG, useValue: config },RegisterService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-secure',\r\n  template: `{{message}}`\r\n})\r\nexport class ProtectedComponent {\r\n  message;\r\n\r\n  constructor() {\r\n    this.message = 'Protected endpoint!';\r\n  }\r\n}","import { Observable } from 'rxjs';\nimport { User } from './../model/user.model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n  constructor(private http: HttpClient){\n  }\n  url ='https://dev-96827083.okta.com/api/v1/users?acti3vate=true';\n\n  \n  createUser(user: User) : Observable<User>{\n    const headers = new HttpHeaders({\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      Authorization : 'SSWS00pcxhTFA1UllEd5-RsrjAXpWzXS6h1VEN4eOF0ikU'\n    })\n   \n     return this.http.post<User>(this.url,{ \n      profile: {\n      \"firstName\": user.firstName,\n      \"lastName\": user.lastName,\n      \"email\": user.email,\n      \"login\": user.email\n     \n      },\n      credentials: {\n        \"password\" : { \"value\": user.password }\n      }\n    },{headers: headers});\n   \n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, NavigationStart} from '@angular/router';\r\n\r\nimport { OktaAuthService } from '@okta/okta-angular';\r\nimport * as OktaSignIn from '@okta/okta-signin-widget';\r\n\r\n@Component({\r\n  selector: 'app-secure',\r\n  template: `\r\n    <!-- Container to inject the Sign-In Widget -->\r\n    <div id=\"okta-signin-container\"></div>\r\n  `\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  authService;\r\n  widget = new OktaSignIn({\r\n    el: '#okta-signin-container',\r\n    baseUrl: 'https://dev-96827083.okta.com',\r\n    authParams: {\r\n      pkce: true\r\n    },\r\n         clientId: '0oa86pz8gD2KvS0qw5d6',\r\n         redirectUri: 'http://localhost:4200/login/callback',\r\n    \r\n         features: {\r\n          idpDiscovery: true\r\n        }    \r\n  }\r\n  \r\n  \r\n  );\r\n\r\n  constructor(oktaAuth: OktaAuthService, router: Router) {\r\n    this.authService = oktaAuth;\r\n\r\n    // Show the widget when prompted, otherwise remove it from the DOM.\r\n    router.events.forEach(event => {\r\n      if (event instanceof NavigationStart) {\r\n        switch(event.url) {\r\n          case '/login':\r\n            break;\r\n          case '/protected':\r\n            break;\r\n          case '/register':\r\n              break;\r\n            \r\n          default:\r\n            this.widget.remove();\r\n            break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.widget.showSignInAndRedirect().catch(err => {\r\n      throw(err);\r\n    });\r\n  }\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}